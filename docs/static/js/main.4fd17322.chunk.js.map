{"version":3,"sources":["reportWebVitals.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/SearchComponent.js","GiffApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getGifs","category","a","url","encodeURI","fetch","resp","json","data","images","map","img","id","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","setData","useEffect","useFetchGifs","gifs","gif","SearchComponent","setCategories","value","setValue","onSubmit","e","preventDefault","cat","type","onChange","target","GiffApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"4KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qCCLDQ,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,yFAE0EC,UAAUH,GAFpF,sBAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAMCA,EAAKC,OANN,uBAMbC,EANa,EAMbA,KAEDC,EAASD,EAAKE,KAAK,SAAAC,GAAG,MACzB,CACGC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIF,OAAOK,iBAAiBX,QAZnB,kBAgBbM,GAhBa,4CAAH,sD,OCAPM,EAAc,SAAC,GAAiB,IAAhBZ,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAC9B,OACG,sBAAKG,UAAU,kDAAf,UACG,4BAAIH,IACJ,qBAAKI,IAAKd,EAAKe,IAAKL,QCDhBM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAWtB,ECZyB,SAACA,GAC1B,MAAwBmB,mBAAS,CAC9BZ,KAAM,GACNa,SAAS,IAFZ,mBAAOb,EAAP,KAAac,EAAb,KAiBA,OAZAC,qBAAU,WACPvB,EAAQC,GACPP,MAAK,SAAAiB,GAAG,OAEHW,EAAQ,CACLd,KAAMG,EACNU,SAAQ,SAIjB,CAACpB,IAEGO,EDNqBgB,CAAavB,GAA7BwB,EAAZ,EAAOjB,KAAUa,EAAjB,EAAiBA,QAIjB,OACG,gCACG,6BAAKpB,IACL,sBAAKe,UAAU,WAAf,UACKK,GAAW,mBAAGL,UAAU,mCAAb,wBAEVS,EAAKf,KAAK,SAAAgB,GAAG,OACV,cAAC,EAAD,2BAA8BA,GAA9B,IAAmCV,UAAU,sCAA3BU,EAAId,c,QExB3Be,EAAkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC/B,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAiBA,OACG,8BACG,sBAAMC,SAZS,SAACC,GACnBA,EAAEC,iBACY,KAAVJ,IAGJD,GACG,SAAAM,GAAG,OAAKL,GAAL,mBAAcK,OAEpBJ,EAAS,MAIN,SACG,uBACGK,KAAK,OACLN,MAAQA,EACRO,SApBc,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACzBP,EAAUO,EAAOR,eCJVS,EAAU,WACpB,MAAoClB,mBAAS,CAAC,OAAO,WAArD,mBAAOmB,EAAP,KAAmBX,EAAnB,KACA,OACG,gCACG,yCACA,uBACA,cAAC,EAAD,CAAiBA,cAAeA,IAChC,8BAEMW,EAAW7B,KAAK,SAACT,EAASuC,GAAV,OACb,cAAC,EAAD,CAA4BvC,SAAUA,GAAxBA,EAAWuC,YCR3CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.4fd17322.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\nexport const getGifs = async(category)=>{\n      \n   const url = `http://api.giphy.com/v1/gifs/search?api_key=bRWSlDNKQ3bI7tNLcHIv9rqI5kAwGtjr&q=${encodeURI(category)}&limit=10`;\n\n   const resp = await fetch(url);\n\n   const {data} = await resp.json();\n\n   const images = data.map( img=>(\n      {\n         id: img.id,\n         title: img.title,\n         url: img.images.downsized_medium.url\n      }\n   ))\n\n   return images;\n   \n}\n\n","import React from 'react'\n\nexport const GifGridItem = ({url,title}) => {\n   return (\n      <div className=\"gif-grid-item animate__animated animate__fadeIn\">\n         <p>{title}</p>\n         <img src={url} alt={title} />\n      </div>\n   )\n}\n","import React from 'react'\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n   // const [gifs, setGifs] = useState([]);\n\n   // useEffect(() => {\n   //    getGifs(category,setGifs);\n\n   // }, [category])\n\n   // console.log(gifs);\n\n   const {data:gifs,loading} = useFetchGifs(category);\n\n   \n   \n   return (\n      <div >\n         <h3>{category}</h3>\n         <div className=\"gif-grid\">\n            { loading && <p className=\"animate__animated animate__hinge\">Loading...</p>}\n            {\n               gifs.map( gif=> (\n                  <GifGridItem key={gif.id} {...gif} className=\"animate__animated animate__fadeIn\"/>\n               ))\n            }\n         </div>\n      </div>\n   )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n   const [data, setData] = useState({\n      data: [],\n      loading: true\n   });\n\n   useEffect(() => {\n      getGifs(category)\n      .then(img=>\n         \n            setData({\n               data: img,\n               loading:false\n            })\n         )\n\n   }, [category])\n\n   return data;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchComponent = ( {setCategories} ) => {\n   const [value, setValue] = useState('');\n\n\n   const handleInputChange = ({target})=>{\n      setValue( target.value )\n   }\n\n   const handleSubmit = (e)=>{\n      e.preventDefault();\n      if (value === '') {\n         return;\n      }\n      setCategories (\n         cat => [value,...cat]\n      )\n      setValue('');\n   }\n   return (\n      <div>\n         <form onSubmit={ handleSubmit }>\n            <input \n               type=\"text\"\n               value={ value }\n               onChange={ handleInputChange }\n            />\n         </form>\n      </div>\n   )\n}\n\nSearchComponent.propTypes={\n   setCategories: PropTypes.func.isRequired,\n}","import React, { useState } from 'react'\nimport { GifGrid } from './components/GifGrid'\nimport { SearchComponent } from './components/SearchComponent'\n\nexport const GiffApp = () => {\n   const [categories, setCategories] = useState(['Goku','Naruto'])\n   return (\n      <div>\n         <h1>GiffApp</h1>\n         <hr/>\n         <SearchComponent setCategories={setCategories}/>\n         <div>\n            {\n               categories.map( (category,i) => (\n                  <GifGrid key={category + i} category={category}/>\n               ))\n            }\n         </div>\n      </div>\n   )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { GiffApp } from './GiffApp';\n\nReactDOM.render(\n    <GiffApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}